
{"title":"Search in a matrix","difficulty":"Easy","accuracy":"41.62%","submissions":"123K+","points":"2","problem":"<p>Given a matrix <code>mat[][]</code> of size <code>N x M</code>, where every row and column is sorted in increasing order, and a number <code>X</code> is given. The task is to find whether element <code>X</code> is present in the matrix or not.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong>\n<code>N = 3, M = 3\nmat[][] = {\n {3, 30, 38},\n {44, 52, 54},\n {57, 60, 69}\n}\nX = 62</code>\n<strong>Output:</strong>\n<code>0</code></pre>\n\n<p>Explanation:<br />\n62 is not present in the matrix, so output is 0</p>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong>\n<code>N = 1, M = 6\nmat[][] = {\n {18, 21, 27, 38, 55, 67}\n}\nX = 55</code>\n<strong>Output:</strong>\n<code>1</code></pre>\n\n<p>Explanation:<br />\n55 is present in the matrix at 5th cell.</p>\n\n<p>Your Task:<br />\nYou don't need to read input or print anything. You just have to complete the function <code>matSearch()</code> which takes a 2D matrix <code>mat[][],</code> its dimensions <code>N</code> and <code>M</code> and integer <code>X</code> as inputs and returns 1 if the element <code>X</code> is present in the matrix and 0 otherwise.</p>\n\n<p><strong>Expected Time Complexity:</strong> O(N+M).<br />\n<strong>Expected Auxiliary Space:</strong> O(1).</p>\n\n<p><strong>Constraints:</strong><br />\n1 <= N, M <= 1005<br />\n1 <= mat[][] <= 10000000<br />\n1 <= X <= 10000000</p>","companies":[]}