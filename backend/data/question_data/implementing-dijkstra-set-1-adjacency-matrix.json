{
    "title": "Implementing Dijkstra Algorithm",
    "difficulty": "Medium",
    "accuracy": "50.83%",
    "submissions": "145K+",
    "points": "4",
    "problem": "<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\">Given a weighted, undirected and connected graph of V vertices and an adjacency list adj where adj[i] is a list of lists containing two integers where the first integer of each list j denotes there is edge between i and j , second integers corresponds to the weight of that  edge . You are given the source vertex S and You to Find the shortest distance of all the vertex's from the source vertex S. You have to return a list of integers denoting shortest distance between each node and Source vertex S.</span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></span></p>\n<pre><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Input:</strong>\nV = 2\nadj [] = {{{1, 9}}, {{0, 9}}}\nS = 0\n<strong>Output:</strong>\n0 9\n<strong>Explanation:</strong>\nThe source vertex is 0. Hence, the shortest \ndistance of node 0 is 0 and the shortest \ndistance from node 1 is 9.</span></span></pre>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></span></p>\n<pre><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Input:</strong>\nV = 3, E = 3\nadj = {{{1, 1}, {2, 6}}, {{2, 3}, {0, 1}}, {{1, 3}, {0, 6}}}\nS = 2\n<strong>Output:</strong>\n4 3 0\n<strong>Explanation:</strong>\nFor nodes 2 to 0, we can follow the path-\n2-1-0. This has a distance of 1+3 = 4,\nwhereas the path 2-0 has a distance of 6. So,\nthe Shortest path from 2 to 0 is 4.\nThe shortest distance from 0 to 1 is 1 .</span></span></pre>\n<p>&nbsp;</p>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br>You don't need to read input or print anything. Your task is to complete the function dijkstra()  which takes the number of vertices V and an adjacency list adj as input parameters and Source vertex S returns a list of integers, where ith integer denotes the shortest distance of the ith node from the Source node. Here adj[i] contains a list of lists containing two integers where the first integer j denotes that there is an edge between i and j and the second integer w denotes that the weight between edge i and j is w.</span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(V2).</span></span></p>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Expected Auxiliary Space:</strong> O(V2).</span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br>1 ≤ V ≤ 1000<br>0 ≤ adj[i][j] ≤ 1000<br>1 ≤ adj.size() ≤ [ (V*(V - 1)) / 2 ]</span></span></p>",
    "companies": ["Flipkart", "Microsoft"]
  }
  