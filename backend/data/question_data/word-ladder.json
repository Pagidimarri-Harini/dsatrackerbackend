{
    "title": "Word Ladder",
    "difficulty": "Hard",
    "topics": ["Breadth-first Search"],
    "companies": [],
    "problem": "<p>A transformation sequence from word <em>beginWord</em> to word <em>endWord</em> using a dictionary <em>wordList</em> is a sequence of words <em>beginWord</em> -> <em>s1</em> -> <em>s2</em> -> ... -> <em>sk</em> such that:</p>\n\n<ul>\n\t<li>Every adjacent pair of words differs by a single letter.</li>\n\t<li>Every <em>si</em> for 1 ≤ i ≤ k is in <em>wordList</em>. Note that <em>beginWord</em> does not need to be in <em>wordList</em>.</li>\n\t<li><em>sk</em> == <em>endWord</em></li>\n</ul>\n\n<p>Given two words, <em>beginWord</em> and <em>endWord</em>, and a dictionary <em>wordList</em>, return the number of words in the shortest transformation sequence from <em>beginWord</em> to <em>endWord</em>, or 0 if no such sequence exists.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> One shortest transformation sequence is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\", which is 5 words long.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The endWord \"cog\" is not in wordList, therefore there is no valid transformation sequence.</pre>\n\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>1 ≤ <em>beginWord.length</em> ≤ 10</li>\n\t<li><em>endWord.length == beginWord.length</em></li>\n\t<li>1 ≤ <em>wordList.length</em> ≤ 5000</li>\n\t<li><em>wordList[i].length == beginWord.length</em></li>\n\t<li><em>beginWord</em>, <em>endWord</em>, and <em>wordList[i]</em> consist of lowercase English letters.</li>\n\t<li><em>beginWord != endWord</em></li>\n\t<li>All the words in <em>wordList</em> are unique.</li>\n</ul>\n"
  }
  