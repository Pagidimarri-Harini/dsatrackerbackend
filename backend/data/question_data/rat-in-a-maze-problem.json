{
	"title": "Rat in a Maze Problem - I",
	"difficulty": "Medium",
	"accuracy": "35.75%",
	"submissions": "239K+",
	"points": "4",
	"problem": "<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\">Consider a rat placed at (0, 0) in a square matrix of order N * N. It has to reach the destination at (N - 1, N - 1). Find all possible paths that the rat can take to reach from source to destination. The directions in which the rat can move are 'U'(up), 'D'(down), 'L' (left), 'R' (right). Value 0 at a cell in the matrix represents that it is blocked and rat cannot move to it while value 1 at a cell in the matrix represents that rat can be travel through it.</span></span></p>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></span></p>\n<pre><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 4\nm[][] = {{1, 0, 0, 0},\n         {1, 1, 0, 1}, \n         {1, 1, 0, 0},\n         {0, 1, 1, 1}}\n<strong>Output:</strong>\nDDRDRR DRDDRR\n<strong>Explanation:</strong>\nThe rat can reach the destination at \n(3, 3) from (0, 0) by two paths - DRDDRR \nand DDRDRR, when printed in sorted order \nwe get DDRDRR DRDDRR.</span></span></pre>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></span></p>\n<pre><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 2\nm[][] = {{1, 0},\n         {1, 0}}\n<strong>Output:</strong>\n-1\n<strong>Explanation:</strong>\nNo path exists and destination cell is \nblocked.</span></span></pre>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br>You don't need to read input or print anything. Complete the function printPath() which takes N and 2D array m[ ][ ] as input parameters and returns the list of paths in lexicographically increasing order. \nNote: In case of no path, return an empty list. The driver will output \"-1\" automatically.</span></span></p>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O((3N^2)).</span></span></p>\n<strong>Expected Auxiliary Space:</strong> O(L * X), L = length of the path, X = number of paths.</span></span></p>\n<p><span style=\"font-family: arial,helvetica,sans-serif;\"><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br>2 ≤ N ≤ 5<br>0 ≤ m[i][j] ≤ 1</span></span></p>",
	"companies": ["Amazon", "Microsoft"]
}
